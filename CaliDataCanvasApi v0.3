# Initialise an empty list to store events
canvasEvents = []

# Function to get an event by its ID
def get_event_by_id(event_id):
    for event in canvasEvents:
        if event['myId'] == event_id:
            return event
    return None

def createEvent():
    myID = int(input("Enter event ID: "))
    myDate = input("Enter date (DD/MM/YYYY): ")  # Update date format
    myStatus = input("Enter status: ")
    myEmail = input("Enter email: ")
    myRoomBooking = input("Enter room booking (Y/N): ")
    myRepeat = input("Enter repeat (Y/N): ")
    myLocation = input("Enter location: ")
    myVisibility = input("Enter visibility (Visible/Private): ")
    myTime = input("Enter time (HH:MM AM/PM): ")  # Update time format
    addEvent(myID, myDate, myStatus, myEmail, myRoomBooking, myRepeat, myLocation, myVisibility, myTime)
    print("Event created.")

# Function to add an event to the list
def addEvent(myID, myDate, myStatus, myEmail, myRoomBooking, myRepeat, myLocation, myVisibility, myTime):
    event = {
        'myId': myID, 'Date': myDate, 'Status': myStatus, 'Email': myEmail,
        'Room Booking': myRoomBooking, 'repeat': myRepeat, 'Location': myLocation,
        'Visibility': myVisibility, 'Time': myTime
    }
    canvasEvents.append(event)

# Hardcoded initial events with updated date and time formats
addEvent(101, '27/01/2024', 'Available', 'bob.hardman@gmail.com', 'Y', 'Y', 'Cambridge', 'Visible', '01:00 PM')
addEvent(102, '28/01/2024', 'Available', 'dan.squire@gmail.com', 'Y', 'N', 'London', 'Private', '08:00 AM')
addEvent(103, '29/01/2024', 'Available', 'James.Michaels@gmail.co.uk', 'N', 'Y', 'Madrid', 'Visible', '09:00 AM')
addEvent(104, '10/01/2024', 'Available', 'peter.Gregs@gmail.com', 'N', 'N', 'Glasgow', 'Private', '10:30 AM')
addEvent(105, '07/02/2024', 'Unavailable', 'Sarah.Maria@gmail.com', 'Y', 'Y', 'Reigate', 'Visible', '12:00 PM')
addEvent(106, '31/01/2024', 'Available', 'Josh.Key@gmail.com', 'Y', 'Y', 'Crawley', 'Visible', '02:00 PM')
addEvent(107, '30/01/2024', 'Available', 'stuart.jones@gmail.com', 'N', 'Y', 'London', 'Private', '03:00 PM')
addEvent(108, '24/01/2024', 'Available', 'Paul.Coffey@gmail.com', 'Y', 'N', 'London', 'Private', '04:00 PM')
addEvent(109, '28/01/2024', 'Unavailable', 'Denise.Kent@gmail.com', 'Y', 'Y', 'Cardiff', 'Visible', '11:00 AM')
addEvent(1010, '26/02/2024', 'Unavailable', 'Steve.Trent@gmail.com', 'N', 'N', 'Paris', 'Visible', '12:00 PM')

# Function to read and print all events
def readCanvasEvents():
    for event in canvasEvents:
        print(event)

# Function to amend an existing meeting
def amendMeeting():
    event_id = int(input("Enter the event ID to amend: "))
    event = get_event_by_id(event_id)
    if event:
        event['Date'] = input("Enter new date: ")
        event['Time'] = input("Enter new time: ")
        print("Meeting amended.")
    else:
        print("Event not found.")

# Function to delete an event
def deleteEvent():
    event_id = int(input("Enter the event ID to delete: "))
    global canvasEvents
    canvasEvents = [event for event in canvasEvents if event['myId'] != event_id]
    print("Event deleted if it existed.")

# Function to quit the application
def quitApplication():
    print("Quitting application")
    return True
